sudo: required
services:
  - docker
# Set up environment variables:
env:
  global:
    # Stores the commit hash (SHA) of the tip of the branch that we have just pulled
    - SHA=$(git rev-parse HEAD)
    # Will be used by Google Cloud SDK and tells it to not show any input prompts
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
  # Download and install Google Cloud SDK:
  # On the left of the pipe symbol will download Google Cloud SDK and on the right will
  # install it locally on the instance that is assigned to us by Travis CI
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  # Sources a configuration file from the default install directory of Google Cloud
  # SDK, which means it modifies the shell running inside of Travis CI.
  - source $HOME/google-cloud-sdk/path.bash.inc
  # Ask Googke SDK CLI to install kubectl:
  # This will download and install kubectl command line tool
  - gcloud components update kubectl
  # Decrypt service-account.json.enc and output service-account.json and place in root project directory
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  # Authorise with Google Cloud:
  # A service account is an account that will allow programmatic access
  # to our Google Cloud account.
  # service-account.json will contain our service account credentials
  - gcloud auth activate-service-account --key-file service-account.json
  # Specify exactly which project (using its ID) in Google Cloud we want to work on
  - gcloud config set project multi-k8s-290101
  # Specify Google Cloud Compute Zone
  - gcloud config set compute/zone australia-southeast1-a
  # Specify Google Cloud K8s Cluster name to be used
  - gcloud container clusters get-credentials multi-cluster
  # Log in to Docker Hub
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  # Buid the image for testing
  - docker build -t mbezyan/react-test -f ./client/Dockerfile.dev ./client

script:
  # Run the tests
  - docker run -e CI=true mbezyan/docker-react npm test

deploy:
  # Tell Travis that we will provide the script for deployment
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master
